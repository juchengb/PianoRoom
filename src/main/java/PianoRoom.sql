-- MySQL Script generated by MySQL Workbench
-- Tue Dec 19 14:46:08 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pianoroom
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pianoroom` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `pianoroom` ;

-- -----------------------------------------------------
-- Table `pianoroom`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pianoroom`.`user` ;

CREATE TABLE IF NOT EXISTS `pianoroom`.`user` (
  `id` INT AUTO_INCREMENT NOT NULL,
  `name` VARCHAR(45) NOT NULL, 
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `major_id` INT,
  `level` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_major_id_idx` (`major_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_major_id`
    FOREIGN KEY (`major_id`)
    REFERENCES `pianoroom`.`major` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- Table `pianoroom`.`major`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pianoroom`.`major` ;

CREATE TABLE IF NOT EXISTS `pianoroom`.`major` (
  `id` INT NOT NULL,
  `major_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `pianoroom`.`room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pianoroom`.`room` ;

CREATE TABLE IF NOT EXISTS `pianoroom`.`room` (
  `id` INT AUTO_INCREMENT NOT NULL,
  `dist` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `latitude` DOUBLE NOT NULL,
  `longitude` DOUBLE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- Table `pianoroom`.`business_hour`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pianoroom`.`business_hour` ;

CREATE TABLE IF NOT EXISTS `pianoroom`.`business_hour` (
  `id` INT AUTO_INCREMENT NOT NULL,
  `room_id` INT NOT NULL,
  `day_of_week` VARCHAR(45) NOT NULL,
  `opening_time` TIME NOT NULL,
  `closing_time` TIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_businesshr_room_id_idx` (`room_id` ASC) VISIBLE,
  CONSTRAINT `fk_businesshr_room_id`
    FOREIGN KEY (`room_id`)
    REFERENCES `pianoroom`.`room` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- Table `pianoroom`.`reservation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pianoroom`.`reservation` ;

CREATE TABLE IF NOT EXISTS `pianoroom`.`reservation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `room_id` INT NOT NULL,
  `date` DATE NOT NULL,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  `checkin` TIMESTAMP NULL,
  `checkout` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reservation_user_id_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_reservation_room_id_idx` (`room_id` ASC) VISIBLE,
  CONSTRAINT `fk_reservation_room_id`
    FOREIGN KEY (`room_id`)
    REFERENCES `pianoroom`.`room` (`id`),
  CONSTRAINT `fk_reservation_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `pianoroom`.`user` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- 建立 major
-- -----------------------------------------------------
insert into pianoroom.major(id, major_name)
values (1, '鋼琴'),(2, '小提琴'),(3, '中提琴'),(4, '大提琴'),(5, '低音提琴'),
	   (6, '長笛'),(7, '單簧管'),(8, '雙簧管'),(9, '低音管'),(10, '小號');
       
-- -----------------------------------------------------
-- 建立 user
-- -----------------------------------------------------
insert into pianoroom.user(name,email, password, major_id, level) 
values ('Admin', 'admin@gmail.com', 'abc123', 2, 2),
	   ('Amy', 'abc12345678@gmail.com', 'abc12345678', 1, 1),
	   ('Ben', '87654321cba@gmail.com', '87654321cba', 2, 2),
       ('Carl', '1qazwsxedc@gmail.com', '1qazwsxedc', 3, 1);

-- -----------------------------------------------------
-- 建立 room
-- -----------------------------------------------------
insert into pianoroom.room(dist, name, type, latitude, longitude) 
values ('台北民生校', '503', '教學琴房', 25.05924488253332, 121.5425743262388),
	   ('台北民生校', '508', '練習琴房', 25.057972977895904, 121.54228159001215),
	   ('台北中正校', '貝多芬室', '練習琴房', 25.045608340381392, 121.52511466517534);
-- -----------------------------------------------------
-- 建立 business_hour
-- -----------------------------------------------------
insert into pianoroom.business_hour(room_id, day_of_week, opening_time, closing_time) 
values ('1', '1', '10:00:00', '22:00:00'), ('1', '2', '10:00:00', '22:00:00'), ('1', '3', '10:00:00', '22:00:00'), ('1', '4', '10:00:00', '22:00:00'), ('1', '5', '10:00:00', '22:00:00'),
       ('2', '2', '10:00:00', '20:00:00'), ('2', '3', '10:00:00', '20:00:00'), ('2', '4', '10:00:00', '20:00:00'), ('2', '5', '10:00:00', '20:00:00'), ('2', '6', '10:00:00', '20:00:00'),
	   ('3', '2', '08:00:00', '20:00:00'), ('3', '3', '08:00:00', '20:00:00'), ('3', '4', '08:00:00', '20:00:00'), ('3', '5', '08:00:00', '20:00:00'), ('3', '6', '08:00:00', '20:00:00'), ('3', '7', '08:00:00', '20:00:00');

-- -----------------------------------------------------
-- 建立 reservation
-- -----------------------------------------------------
insert into pianoroom.reservation(user_id ,room_id, date, start_time, end_time, checkin, checkout)
values ('1', '1', '2023-12-19', '16:00:00', '17:00:00', '2023-12-19 16:00:00', '2023-12-19 17:00:00'),
	   ('2', '2', '2023-12-31', '12:00:00', '13:00:00', '2023-12-31 16:00:00', '2023-12-31 17:00:00');