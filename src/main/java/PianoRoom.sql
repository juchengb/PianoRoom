-- mysql script generated by mysql workbench
-- thu dec 21 12:38:32 2023
-- model: new model    version: 1.0
-- mysql workbench forward engineering

set @old_unique_checks=@@unique_checks, unique_checks=0;
set @old_foreign_key_checks=@@foreign_key_checks, foreign_key_checks=0;
set @old_sql_mode=@@sql_mode, sql_mode='only_full_group_by,strict_trans_tables,no_zero_in_date,no_zero_date,error_for_division_by_zero,no_engine_substitution';

-- -----------------------------------------------------
-- schema pianoroom
-- -----------------------------------------------------
create schema if not exists pianoroom default character set utf8mb4 collate utf8mb4_0900_ai_ci;
use pianoroom;

-- -----------------------------------------------------
-- table pianoroom.user_ref_service
-- -----------------------------------------------------
drop table if exists pianoroom.user_ref_service;

create table if not exists user_ref_service(
    level int not null,
    service_id int not null,
    foreign key (level) references user(level),
    foreign key (service_id) references service(service_id),
    constraint unique_level_and_sid unique(level, service_id)
);

-- -----------------------------------------------------
-- table pianoroom.service
-- -----------------------------------------------------
drop table if exists pianoroom.service;

create table if not exists pianoroom.service(
    service_id int primary key,
    service_location varchar(50),
    service_name varchar(50),
    service_url varchar(50)
);

-- -----------------------------------------------------
-- table pianoroom.major
-- -----------------------------------------------------
drop table if exists pianoroom.major;

create table if not exists pianoroom.major(
  id int not null,
  major_name varchar(45) not null,
  primary key (id))
engine = innodb
default character set = utf8mb4
collate = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- table pianoroom.user
-- -----------------------------------------------------
drop table if exists pianoroom.user;

create table if not exists pianoroom.user(
  id int not null auto_increment,
  name varchar(45) not null,
  email varchar(60) not null,
  password varchar(45) not null,
  major_id int null default null,
  level int not null,
  imageurl varchar(200) null default null,
  primary key (id),
  index fk_user_major_id_idx (major_id asc) visible,
  constraint fk_user_major_id
    foreign key (major_id)
    references pianoroom.major (id))
engine = innodb
auto_increment = 1
default character set = utf8mb4
collate = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- table pianoroom.business_hour
-- -----------------------------------------------------
drop table if exists pianoroom.business_hour;

create table if not exists pianoroom.business_hour(
  room_id int not null,
  day_of_week varchar(45) not null,
  opening_time time,
  closing_time time,
  index fk_businesshr_room_id_idx (room_id asc) visible,
  constraint fk_businesshr_room_id
    foreign key (room_id)
    references pianoroom.room (id))
engine = innodb
auto_increment = 1
default character set = utf8mb4
collate = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- table pianoroom.room
-- -----------------------------------------------------
drop table if exists pianoroom.room;

create table if not exists pianoroom.room(
  id int not null auto_increment,
  name varchar(60) not null,
  dist varchar(60) not null,
  type varchar(60) not null,
  latitude double not null,
  longitude double not null,
  primary key (id))
engine = innodb
auto_increment = 1
default character set = utf8mb4
collate = utf8mb4_0900_ai_ci;

-- -----------------------------------------------------
-- table pianoroom.reservation
-- -----------------------------------------------------
drop table if exists pianoroom.reservation;

create table if not exists pianoroom.reservation(
  id int not null auto_increment,
  user_id int not null,
  room_id int not null,
  start_time timestamp not null,
  end_time timestamp not null,
  checkin timestamp null default null,
  checkout timestamp null default null,
  primary key (id),
  index fk_reservation_user_id_idx (user_id asc) visible,
  index fk_reservation_room_id_idx (room_id asc) visible,
  constraint fk_reservation_room_id
    foreign key (room_id)
    references pianoroom.room (id),
  constraint fk_reservation_user_id
    foreign key (user_id)
    references pianoroom.user (id))
engine = innodb
auto_increment = 1
default character set = utf8mb4
collate = utf8mb4_0900_ai_ci;

set sql_mode=@old_sql_mode;
set foreign_key_checks=@old_foreign_key_checks;
set unique_checks=@old_unique_checks;

-- -----------------------------------------------------
-- 建立 major
-- -----------------------------------------------------
insert into pianoroom.major(id, major_name)
values (1, '鋼琴'), (2, '小提琴'), (3, '中提琴'), (4, '大提琴'), 
	   (5, '低音提琴'), (6, '長笛'), (7, '雙簧管'), (8, '單簧管'), (9, '低音管'), 
       (10, '法國號'), (11, '小號'), (12, '長號'), (13, '低音號'), (14, '打擊'), 
       (15, '聲樂'), (16, '作曲'), (17, '其他');
       
-- -----------------------------------------------------
-- 建立 user
-- -----------------------------------------------------
insert into pianoroom.user(email, password, name, major_id, level) 
values ('admin@gmail.com', 'abc123', 'admin', 2, 1),
	   ('abc12345678@gmail.com', 'abc12345678', 'amy', 1, 2),
	   ('87654321cba@gmail.com', '87654321cba', 'ben', 2, 2),
       ('1qazwsxedc@gmail.com', '1qazwsxedc', 'carl', 3, 2);

-- -----------------------------------------------------
-- 建立 room
-- -----------------------------------------------------
insert into pianoroom.room(name, dist, type, latitude, longitude) 
values ('503', '台北民生校', '教學琴房', 25.05924488253332, 121.5425743262388),
	   ('504', '台北民生校', '練習琴房', 25.057972977895904, 121.54228159001215),
       ('505', '台北民生校', '練習琴房', 25.057972977895904, 121.54228159001215),
       ('506', '台北民生校', '練習琴房', 25.057972977895904, 121.54228159001215),
       ('507', '台北民生校', '練習琴房', 25.057972977895904, 121.54228159001215),
	   ('508', '台北民生校', '練習琴房', 25.057972977895904, 121.54228159001215),
	   ('貝多芬室', '台北中正校', '教學琴房', 25.045608340381392, 121.52511466517534),
       ('莫札特室', '台北中正校', '教學琴房', 25.045608340381392, 121.52511466517534);

-- -----------------------------------------------------
-- 建立 business_hour
-- -----------------------------------------------------
insert into pianoroom.business_hour(room_id, day_of_week, opening_time, closing_time) 
values ('1', 'monday', null, null), ('1', 'tuesday', '01:00:00', '24:00:00'), ('1', 'wednesday', '01:00:00', '24:00:00'), ('1', 'thursday', '01:00:00', '24:00:00'), ('1', 'friday', '01:00:00', '24:00:00'), ('1', 'saturday', '01:00:00', '24:00:00'), ('1', 'sunday', '01:00:00', '24:00:00'),
       ('2', 'monday', null, null), ('2', 'tuesday', '10:00:00', '20:00:00'), ('2', 'wednesday', '10:00:00', '20:00:00'), ('2', 'thursday', '10:00:00', '20:00:00'), ('2', 'friday', '10:00:00', '20:00:00'), ('2', 'saturday', null, null), ('2', 'sunday', null, null),
	   ('3', 'monday', null, null), ('3', 'tuesday', '08:00:00', '20:00:00'), ('3', 'wednesday', '08:00:00', '20:00:00'), ('3', 'thursday', '08:00:00', '20:00:00'), ('3', 'friday', '08:00:00', '20:00:00'), ('3', 'saturday', '08:00:00', '20:00:00'), ('3', 'sunday', '08:00:00', '20:00:00'),
	   ('4', 'monday', null, null), ('4', 'tuesday', '01:00:00', '24:00:00'), ('4', 'wednesday', '01:00:00', '24:00:00'), ('4', 'thursday', '01:00:00', '24:00:00'), ('4', 'friday', '01:00:00', '24:00:00'), ('4', 'saturday', '01:00:00', '24:00:00'), ('4', 'sunday', '01:00:00', '24:00:00'),
       ('5', 'monday', null, null), ('5', 'tuesday', '10:00:00', '20:00:00'), ('5', 'wednesday', '10:00:00', '20:00:00'), ('5', 'thursday', '10:00:00', '20:00:00'), ('5', 'friday', '10:00:00', '20:00:00'), ('5', 'saturday', null, null), ('5', 'sunday', null, null),
       ('6', 'monday', null, null), ('6', 'tuesday', '19:00:00', '20:00:00'), ('6', 'wednesday', '10:00:00', '20:00:00'), ('6', 'thursday', '10:00:00', '20:00:00'), ('6', 'friday', '10:00:00', '20:00:00'), ('6', 'saturday', null, null), ('6', 'sunday', null, null),
       ('7', 'monday', null, null), ('7', 'tuesday', null, null), ('7', 'wednesday', '10:00:00', '20:00:00'), ('7', 'thursday', '10:00:00', '20:00:00'), ('7', 'friday', '10:00:00', '20:00:00'), ('7', 'saturday', null, null), ('7', 'sunday', null, null),
	   ('8', 'monday', null, null), ('8', 'tuesday', null, null), ('8', 'wednesday', '08:00:00', '20:00:00'), ('8', 'thursday', '08:00:00', '20:00:00'), ('8', 'friday', '08:00:00', '20:00:00'), ('8', 'saturday', '08:00:00', '20:00:00'), ('8', 'sunday', '08:00:00', '20:00:00');
-- -----------------------------------------------------
-- 建立 reservation
-- -----------------------------------------------------
insert into pianoroom.reservation(user_id ,room_id, start_time, end_time, checkin, checkout)
values ('1', '1', '2023-12-26 14:00:00', '2023-12-26 16:00:00', '2023-12-26 14:01:00', null),
	   ('1', '1', '2023-12-30 10:00:00', '2023-12-30 12:00:00', null, null),
	   ('2', '2', '2023-12-26 14:00:00', '2023-12-26 16:00:00', null, null),
       ('3', '3', '2023-12-22 14:00:00', '2023-12-22 16:00:00', '2023-12-22 14:00:00', '2023-12-22 16:00:00'),
       ('4', '4', '2023-12-26 14:00:00', '2023-12-26 16:00:00', '2023-12-26 14:02:00', '2023-12-26 14:40:00');


-- -----------------------------------------------------
-- 建立 view 所有琴房當日營業時間
-- -----------------------------------------------------
-- create view currentdayroomsbusinesshoursview as 
-- select r.id, r.name, r.dist, r.type, bh.day_of_week, bh.opening_time, bh.closing_time
-- from pianoroom.room r
-- join pianoroom.business_hour bh on r.id = bh.room_id
-- where bh.day_of_week = dayname(now());

-- -----------------------------------------------------
-- 建立 view 所有琴房當下使用狀況
-- -----------------------------------------------------
create view currentroomstatusview as 
select r.id, r.name, r.dist, r.type, r.latitude, r.longitude,
    case
		when (curtime() not between bh.opening_time and bh.closing_time) or ((bh.opening_time and bh.closing_time) is null) then '未開放'
        when (curtime() between bh.opening_time and bh.closing_time) and (now() between rs.start_time and rs.end_time) then
			case
				when rs.checkin is null then '已預約'
				when now() < rs.end_time then '使用中'
			end
		 else '空琴房'
    end as status
from pianoroom.room r
left join pianoroom.business_hour bh on r.id = bh.room_id
left join pianoroom.reservation rs on r.id = rs.room_id and (now() between rs.start_time and rs.end_time)
where (dayname(now()) = bh.day_of_week);